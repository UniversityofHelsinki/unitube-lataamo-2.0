image: node:18-alpine

# Cache node modules - speeds up future builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules

## Define the stages
stages:
  - compile
  - build
  - test
  - sonarqube

## Define the process for compile stage
build-stage:
  stage: compile
  tags:
    - ohtu-build-3
  script:
    - npm ci

## Define the process for oc-test build stage
build_oc_test:
  stage: build
  tags:
    - ohtu-build-3
  only:
    - oc-test
  script:
    - yes | cp -f -v .env.oc-test .env.production || true
    - CI=false npm run build
  artifacts:
    expire_in: 1h
    name: lataamo-build
    paths:
      - build

test:
  stage: test
  tags:
    - ohtu-build-3
  script:
    - npm install
    - npm test
  coverage: /All files\s*\|\s*([\d\.]+)/
  artifacts:
    paths:
      - coverage/

sonarqube-check:
  stage: sonarqube
  tags:
    - ohtu-build-3
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
## Define the process for sonarqube check
#sonarqube-check:
#  stage: test
#  tags:
#    - ohtu-build-3
#  image:
#    name: sonarsource/sonar-scanner-cli:latest
#    entrypoint: [ "" ]
#  variables:
#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script:
#    - npm install
#    - npm test -- --coverage
#    - sonar-scanner
#  allow_failure: true
#  only:
#    - master